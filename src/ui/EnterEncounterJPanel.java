/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Town;
import model.Community;
import model.Encounter;
import model.Address;
import model.Patient;
import model.Person;
import model.Vitals;

/**
 *
 * @author vagishadeo
 */
public class EnterEncounterJPanel extends javax.swing.JPanel {

    Town town;
    /**
     * Creates new form AddEncounterPanel
     */
    public EnterEncounterJPanel(Town town) {
        this.town = town;
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EncounterLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PersonTable = new javax.swing.JTable();
        EncounterButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NameTexy = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        AddressLine1Text = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        AddressLine2Text = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ZipcodeText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        CityText = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPulseRate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        RespirationRateText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        BloodPressureText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        AppoinmentDateText = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 204));

        EncounterLabel.setBackground(new java.awt.Color(255, 255, 204));
        EncounterLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        EncounterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EncounterLabel.setText("Enter Encounter Information");

        PersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Address Line 1", "Address Line 1", "Pincode", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PersonTable);

        EncounterButton.setText("Add Encounter");
        EncounterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncounterButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pre-fill information for Doctor's Appointment");

        jLabel2.setText("Name:");

        NameTexy.setEditable(false);
        NameTexy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTexyActionPerformed(evt);
            }
        });

        jLabel3.setText("Address Line 1:");

        AddressLine1Text.setEditable(false);
        AddressLine1Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressLine1TextActionPerformed(evt);
            }
        });

        jLabel4.setText("Address Line 2:");

        AddressLine2Text.setEditable(false);

        jLabel5.setText("Pincode:");

        ZipcodeText.setEditable(false);

        jLabel6.setText("Community:");

        txtCommunity.setEditable(false);

        jLabel10.setText("City:");

        CityText.setEditable(false);

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Doctor Name:");

        jLabel11.setText("Pulse Rate:");

        jLabel12.setText("Temperature:");

        jLabel13.setText("        Respiration Rate:");

        jLabel14.setText("Blood Pressure:");

        jLabel15.setText("Appointment Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(EncounterButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel10))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)))))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NameTexy)
                    .addComponent(AddressLine2Text)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(ZipcodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(AddressLine1Text, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCommunity)
                    .addComponent(CityText))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RespirationRateText, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(AppoinmentDateText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BloodPressureText))
                        .addGap(82, 82, 82))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel12)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPulseRate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(txtTemperature, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDoctorName))
                        .addContainerGap(93, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EncounterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(EncounterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EncounterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameTexy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddressLine2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ZipcodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(88, 88, 88))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RespirationRateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(BloodPressureText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AppoinmentDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddressLine1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed

        if(txtDoctorName == null || "".equals(txtDoctorName.getText().trim())
                || !Pattern.matches("^(?![\\s.]+$)[a-zA-Z\\s.]*$", txtDoctorName.getText())) {
            showMessageDialog(this, "Please enter a valid doctor name", "Error", ERROR_MESSAGE);
            return;
        }
        else if(txtPulseRate == null || "".equals(txtPulseRate.getText().trim()) 
                || !Pattern.matches("^[0-9]{1,3}$", txtPulseRate.getText().trim())) {
            showMessageDialog(this, "Please enter a valid pluse rate", "Error", ERROR_MESSAGE);
            return;
        }
        else if(txtTemperature == null || "".equals(txtTemperature.getText().trim()) 
                || !Pattern.matches("^[0-9]{1,3}$", txtTemperature.getText().trim())) {
            showMessageDialog(this, "Please enter a temperature", "Error", ERROR_MESSAGE);
            return;
        }
        else if(RespirationRateText == null || "".equals(RespirationRateText.getText().trim()) 
                || !Pattern.matches("^[0-9]{1,2}$", RespirationRateText.getText().trim())) {
            showMessageDialog(this, "Please enter a repiration ratee", "Error", ERROR_MESSAGE);
            return;
        }
        else if(BloodPressureText == null || "".equals(BloodPressureText.getText().trim()) 
                || !Pattern.matches("^[0-9]{1,3}$", BloodPressureText.getText().trim())) {
            showMessageDialog(this, "Please enter a blood pressure", "Error", ERROR_MESSAGE);
            return;
        }
        else if(AppoinmentDateText.getText() == null || "".equals(AppoinmentDateText.getText().trim()) 
                || !isValidDate("MM/dd/yyyy", AppoinmentDateText.getText().trim())) {
            showMessageDialog(this, "Please enter a valid appoinment date", "Error", ERROR_MESSAGE);
            return;
        }
                
        int selectedRow = PersonTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) PersonTable.getModel();
        Person person = (Person) model.getValueAt(selectedRow, 0);
        Vitals vitals = new Vitals();
        vitals.setBloodP(BloodPressureText.getText());
        vitals.setPulse(txtPulseRate.getText());
        vitals.setbreathRate(RespirationRateText.getText());
        vitals.setTemp(txtTemperature.getText());
        
        Encounter encounter = new Encounter();
        encounter.setDoctor(txtDoctorName.getText());
        encounter.setDate(AppoinmentDateText.getText());
        encounter.setVitals(vitals);
        person.getPatient().getencounterBackground().enterEncounter(encounter);
        
        NameTexy.setText("");
        AddressLine1Text.setText("");
        AddressLine2Text.setText("");
        ZipcodeText.setText("");
        txtCommunity.setText("");
        CityText.setText("");
        txtDoctorName.setText("");
        txtPulseRate.setText("");
        txtTemperature.setText("");
        RespirationRateText.setText("");
        BloodPressureText.setText("");
        AppoinmentDateText.setText("");
        
        JOptionPane.showMessageDialog(this, "Patient Detail added successfully");
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void EncounterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncounterButtonActionPerformed
        int selectedRow = PersonTable.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to add doctor's appoinment detail", "Error", ERROR_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) PersonTable.getModel();
        Person person = (Person) model.getValueAt(selectedRow, 0);
        Address address = (Address) model.getValueAt(selectedRow, 2);
        Community community = (Community) model.getValueAt(selectedRow, 5);
        Town Town = (Town) model.getValueAt(selectedRow, 6);
        NameTexy.setText(person.toString());
        AddressLine1Text.setText(address.getAddressLine1());
        AddressLine2Text.setText(address.getAddressLine2());
        ZipcodeText.setText(address.getzipcode());
        txtCommunity.setText(community.getcommunityInfo());
        CityText.setText(town.getTown());
        
    }//GEN-LAST:event_EncounterButtonActionPerformed

    private void NameTexyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTexyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTexyActionPerformed

    private void AddressLine1TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressLine1TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressLine1TextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressLine1Text;
    private javax.swing.JTextField AddressLine2Text;
    private javax.swing.JTextField AppoinmentDateText;
    private javax.swing.JTextField BloodPressureText;
    private javax.swing.JTextField CityText;
    private javax.swing.JButton EncounterButton;
    private javax.swing.JLabel EncounterLabel;
    private javax.swing.JTextField NameTexy;
    private javax.swing.JTable PersonTable;
    private javax.swing.JTextField RespirationRateText;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField ZipcodeText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtPulseRate;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) PersonTable.getModel();
        model.setRowCount(0);
        
        for(Community community : town.getcommunityArray())
        {
            Object[] row = new Object[7];
            row[6] = town;
            row[5] = community;
            for(Address address : community.getaddressList())
            {
                row[2] = address;
                row[3] = address.getAddressLine2();
                row[4] = address.getzipcode();
                for(Person person : address.getpersonArray())
                {
                    row[0] = person;
                    row[1] = person.getperson_age();
                    model.addRow(row);
                }
            }
        }
//        tblPersonDetail.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
//        {
//            @Override
//            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
//            {
//                
//                Car car = (Car)table.getModel().getValueAt(row, 0);
//                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
//                c.setBackground(car.isAvailable()? Color.LIGHT_GRAY: Color.RED);
//                return c;
//            }
//        });
    }

    private boolean isValidDate(String format, String dateValue) {
        DateFormat formatter = new SimpleDateFormat(format);
        formatter.setLenient(false);
        try {
            formatter.parse(dateValue);
        } catch (Exception e) {
            return false;
        }
        return true;
    }
}
